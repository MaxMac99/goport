/*
 * GoPort API
 *
 * The GoPort API extends the Docker Engine API to connect to remote Hosts by serving a context endpoint. It also adds the ability to manage docker-compose projects.  # Errors  The API uses standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be JSON in the following format:  ``` {   \"message\": \"page not found\" } ```
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

type NetworkCreateBody struct {

	// The network's name.
	Name string `json:"Name"`

	// Check for networks with duplicate names. Since Network is primarily keyed based on a random ID and not on the name, and network name is strictly a user-friendly alias to the network which is uniquely identified using ID, there is no guaranteed way to check for duplicates. CheckDuplicate is there to provide a best effort checking of any networks which has the same name but it is not guaranteed to catch all name collisions.
	CheckDuplicate bool `json:"CheckDuplicate,omitempty"`

	// Name of the network driver plugin to use.
	Driver string `json:"Driver,omitempty"`

	// Restrict external access to the network.
	Internal bool `json:"Internal,omitempty"`

	// Globally scoped network is manually attachable by regular containers from workers in swarm mode.
	Attachable bool `json:"Attachable,omitempty"`

	// Ingress network is the network which provides the routing-mesh in swarm mode.
	Ingress bool `json:"Ingress,omitempty"`

	IPAM *Ipam `json:"IPAM,omitempty"`

	// Enable IPv6 on the network.
	EnableIPv6 bool `json:"EnableIPv6,omitempty"`

	// Network specific options to be used by the drivers.
	Options map[string]string `json:"Options,omitempty"`

	// User-defined key/value metadata.
	Labels map[string]string `json:"Labels,omitempty"`
}
