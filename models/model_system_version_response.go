/*
 * GoPort API
 *
 * The GoPort API extends the Docker Engine API to connect to remote Hosts by serving a context endpoint. It also adds the ability to manage docker-compose projects.  # Errors  The API uses standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be JSON in the following format:  ``` {   \"message\": \"page not found\" } ```
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

// SystemVersionResponse - Response of Engine API: GET \"/version\"
type SystemVersionResponse struct {
	Platform SystemVersionResponsePlatform `json:"Platform,omitempty"`

	// Information about system components
	Components []SystemVersionResponseComponents `json:"Components,omitempty"`

	// The version of the daemon
	Version string `json:"Version,omitempty"`

	// The default (and highest) API version that is supported by the daemon
	ApiVersion string `json:"ApiVersion,omitempty"`

	// The minimum API version that is supported by the daemon
	MinAPIVersion string `json:"MinAPIVersion,omitempty"`

	// The Git commit of the source code that was used to build the daemon
	GitCommit string `json:"GitCommit,omitempty"`

	// The version Go used to compile the daemon, and the version of the Go runtime in use.
	GoVersion string `json:"GoVersion,omitempty"`

	// The operating system that the daemon is running on (\"linux\" or \"windows\")
	Os string `json:"Os,omitempty"`

	// The architecture that the daemon is running on
	Arch string `json:"Arch,omitempty"`

	// The kernel version (`uname -r`) that the daemon is running on.  This field is omitted when empty.
	KernelVersion string `json:"KernelVersion,omitempty"`

	// Indicates if the daemon is started with experimental features enabled.  This field is omitted when empty / false.
	Experimental bool `json:"Experimental,omitempty"`

	// The date and time that the daemon was compiled.
	BuildTime string `json:"BuildTime,omitempty"`
}
